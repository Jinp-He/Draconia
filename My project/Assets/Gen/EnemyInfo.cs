//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class EnemyInfo :  Bright.Config.BeanBase 
{
    public EnemyInfo(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { if(!_json["AttackPower"].IsNumber) { throw new SerializationException(); }  AttackPower = _json["AttackPower"]; }
        { if(!_json["AttackPreCD"].IsNumber) { throw new SerializationException(); }  AttackPreCD = _json["AttackPreCD"]; }
        { if(!_json["AttackPostCD"].IsNumber) { throw new SerializationException(); }  AttackPostCD = _json["AttackPostCD"]; }
        { if(!_json["AttackRange"].IsNumber) { throw new SerializationException(); }  AttackRange = _json["AttackRange"]; }
        { if(!_json["AttackRecover"].IsNumber) { throw new SerializationException(); }  AttackRecover = _json["AttackRecover"]; }
        { if(!_json["Speed"].IsNumber) { throw new SerializationException(); }  Speed = _json["Speed"]; }
        { if(!_json["InitialHP"].IsNumber) { throw new SerializationException(); }  InitialHP = _json["InitialHP"]; }
        { if(!_json["CriticalHitRate"].IsNumber) { throw new SerializationException(); }  CriticalHitRate = _json["CriticalHitRate"]; }
        { if(!_json["CriticalDamage"].IsNumber) { throw new SerializationException(); }  CriticalDamage = _json["CriticalDamage"]; }
        { if(!_json["HitRate"].IsNumber) { throw new SerializationException(); }  HitRate = _json["HitRate"]; }
        { if(!_json["DodgeRate"].IsNumber) { throw new SerializationException(); }  DodgeRate = _json["DodgeRate"]; }
        { if(!_json["Armor"].IsNumber) { throw new SerializationException(); }  Armor = _json["Armor"]; }
        { if(!_json["MagicResist"].IsNumber) { throw new SerializationException(); }  MagicResist = _json["MagicResist"]; }
        { if(!_json["HitDecreaseRate"].IsNumber) { throw new SerializationException(); }  HitDecreaseRate = _json["HitDecreaseRate"]; }
        { if(!_json["EnemyStrategy"].IsString) { throw new SerializationException(); }  EnemyStrategy = _json["EnemyStrategy"]; }
        { if(!_json["MaxEnergy"].IsNumber) { throw new SerializationException(); }  MaxEnergy = _json["MaxEnergy"]; }
        PostInit();
    }

    public EnemyInfo(int id, string Name, int AttackPower, int AttackPreCD, int AttackPostCD, int AttackRange, int AttackRecover, int Speed, int InitialHP, float CriticalHitRate, float CriticalDamage, float HitRate, float DodgeRate, int Armor, int MagicResist, float HitDecreaseRate, string EnemyStrategy, int MaxEnergy ) 
    {
        this.Id = id;
        this.Name = Name;
        this.AttackPower = AttackPower;
        this.AttackPreCD = AttackPreCD;
        this.AttackPostCD = AttackPostCD;
        this.AttackRange = AttackRange;
        this.AttackRecover = AttackRecover;
        this.Speed = Speed;
        this.InitialHP = InitialHP;
        this.CriticalHitRate = CriticalHitRate;
        this.CriticalDamage = CriticalDamage;
        this.HitRate = HitRate;
        this.DodgeRate = DodgeRate;
        this.Armor = Armor;
        this.MagicResist = MagicResist;
        this.HitDecreaseRate = HitDecreaseRate;
        this.EnemyStrategy = EnemyStrategy;
        this.MaxEnergy = MaxEnergy;
        PostInit();
    }

    public static EnemyInfo DeserializeEnemyInfo(JSONNode _json)
    {
        return new EnemyInfo(_json);
    }

    /// <summary>
    /// ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 角色名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 攻击力
    /// </summary>
    public int AttackPower { get; private set; }
    /// <summary>
    /// 攻击前摇
    /// </summary>
    public int AttackPreCD { get; private set; }
    /// <summary>
    /// 攻击后摇
    /// </summary>
    public int AttackPostCD { get; private set; }
    /// <summary>
    /// 攻击范围
    /// </summary>
    public int AttackRange { get; private set; }
    /// <summary>
    /// 攻击硬直
    /// </summary>
    public int AttackRecover { get; private set; }
    /// <summary>
    /// 速度 
    /// </summary>
    public int Speed { get; private set; }
    /// <summary>
    /// 生命
    /// </summary>
    public int InitialHP { get; private set; }
    /// <summary>
    /// 暴击率
    /// </summary>
    public float CriticalHitRate { get; private set; }
    /// <summary>
    /// 暴击伤害
    /// </summary>
    public float CriticalDamage { get; private set; }
    /// <summary>
    /// 击中率
    /// </summary>
    public float HitRate { get; private set; }
    /// <summary>
    /// 闪避率
    /// </summary>
    public float DodgeRate { get; private set; }
    /// <summary>
    /// 护甲
    /// </summary>
    public int Armor { get; private set; }
    /// <summary>
    /// 魔抗
    /// </summary>
    public int MagicResist { get; private set; }
    /// <summary>
    /// 硬直系数
    /// </summary>
    public float HitDecreaseRate { get; private set; }
    /// <summary>
    /// 策略
    /// </summary>
    public string EnemyStrategy { get; private set; }
    /// <summary>
    /// 最大能量
    /// </summary>
    public int MaxEnergy { get; private set; }

    public const int __ID__ = 953467958;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "AttackPower:" + AttackPower + ","
        + "AttackPreCD:" + AttackPreCD + ","
        + "AttackPostCD:" + AttackPostCD + ","
        + "AttackRange:" + AttackRange + ","
        + "AttackRecover:" + AttackRecover + ","
        + "Speed:" + Speed + ","
        + "InitialHP:" + InitialHP + ","
        + "CriticalHitRate:" + CriticalHitRate + ","
        + "CriticalDamage:" + CriticalDamage + ","
        + "HitRate:" + HitRate + ","
        + "DodgeRate:" + DodgeRate + ","
        + "Armor:" + Armor + ","
        + "MagicResist:" + MagicResist + ","
        + "HitDecreaseRate:" + HitDecreaseRate + ","
        + "EnemyStrategy:" + EnemyStrategy + ","
        + "MaxEnergy:" + MaxEnergy + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
