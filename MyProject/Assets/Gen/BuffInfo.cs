//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class BuffInfo :  Bright.Config.BeanBase 
{
    public BuffInfo(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["BuffName"].IsString) { throw new SerializationException(); }  BuffName = _json["BuffName"]; }
        { if(!_json["IsConsis"].IsBoolean) { throw new SerializationException(); }  IsConsis = _json["IsConsis"]; }
        { if(!_json["Description"].IsString) { throw new SerializationException(); }  Description = _json["Description"]; }
        { if(!_json["IsPose"].IsBoolean) { throw new SerializationException(); }  IsPose = _json["IsPose"]; }
        PostInit();
    }

    public BuffInfo(int id, string BuffName, bool IsConsis, string Description, bool IsPose ) 
    {
        this.Id = id;
        this.BuffName = BuffName;
        this.IsConsis = IsConsis;
        this.Description = Description;
        this.IsPose = IsPose;
        PostInit();
    }

    public static BuffInfo DeserializeBuffInfo(JSONNode _json)
    {
        return new BuffInfo(_json);
    }

    /// <summary>
    /// ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// Buff名
    /// </summary>
    public string BuffName { get; private set; }
    /// <summary>
    /// 每回合会不会自动减少层数
    /// </summary>
    public bool IsConsis { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Description { get; private set; }
    /// <summary>
    /// 是否是姿态卡
    /// </summary>
    public bool IsPose { get; private set; }

    public const int __ID__ = -1458230335;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "BuffName:" + BuffName + ","
        + "IsConsis:" + IsConsis + ","
        + "Description:" + Description + ","
        + "IsPose:" + IsPose + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
