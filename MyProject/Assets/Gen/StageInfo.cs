//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class StageInfo :  Bright.Config.BeanBase 
{
    public StageInfo(JSONNode _json) 
    {
        { if(!_json["ID"].IsNumber) { throw new SerializationException(); }  ID = _json["ID"]; }
        { var __json0 = _json["CharacterList"]; if(!__json0.IsArray) { throw new SerializationException(); } CharacterList = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  CharacterList.Add(__v0); }   }
        { var __json0 = _json["EnemyList"]; if(!__json0.IsArray) { throw new SerializationException(); } EnemyList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  EnemyList.Add(__v0); }   }
        PostInit();
    }

    public StageInfo(int ID, System.Collections.Generic.List<string> CharacterList, System.Collections.Generic.List<int> EnemyList ) 
    {
        this.ID = ID;
        this.CharacterList = CharacterList;
        this.EnemyList = EnemyList;
        PostInit();
    }

    public static StageInfo DeserializeStageInfo(JSONNode _json)
    {
        return new StageInfo(_json);
    }

    public int ID { get; private set; }
    public System.Collections.Generic.List<string> CharacterList { get; private set; }
    public System.Collections.Generic.List<PlayerInfo> CharacterList_Ref { get; private set; }
    public System.Collections.Generic.List<int> EnemyList { get; private set; }
    public System.Collections.Generic.List<EnemyInfo> EnemyList_Ref { get; private set; }

    public const int __ID__ = -454423380;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        { TbPlayerInfo __table = (TbPlayerInfo)_tables["TbPlayerInfo"]; this.CharacterList_Ref = new System.Collections.Generic.List<PlayerInfo>(); foreach(var __e in CharacterList) { this.CharacterList_Ref.Add(__table.GetOrDefault(__e)); } }
        { TbEnemyInfo __table = (TbEnemyInfo)_tables["TbEnemyInfo"]; this.EnemyList_Ref = new System.Collections.Generic.List<EnemyInfo>(); foreach(var __e in EnemyList) { this.EnemyList_Ref.Add(__table.GetOrDefault(__e)); } }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "CharacterList:" + Bright.Common.StringUtil.CollectionToString(CharacterList) + ","
        + "EnemyList:" + Bright.Common.StringUtil.CollectionToString(EnemyList) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
