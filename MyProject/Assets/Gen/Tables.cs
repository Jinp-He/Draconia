//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using SimpleJSON;


namespace cfg
{ 
   
public sealed partial class Tables
{
    public TbPlayerInfo TbPlayerInfo {get; }
    public TbCardInfo TbCardInfo {get; }
    public TbStageInfo TbStageInfo {get; }
    public TbEnemyInfo TbEnemyInfo {get; }
    public TbCommon TbCommon {get; }
    public TbBuffInfo TbBuffInfo {get; }
    public TbCardBuffInfo TbCardBuffInfo {get; }
    public TbTileInfo TbTileInfo {get; }
    public TbMapInfo TbMapInfo {get; }

    public Tables(System.Func<string, JSONNode> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbPlayerInfo = new TbPlayerInfo(loader("tbplayerinfo")); 
        tables.Add("TbPlayerInfo", TbPlayerInfo);
        TbCardInfo = new TbCardInfo(loader("tbcardinfo")); 
        tables.Add("TbCardInfo", TbCardInfo);
        TbStageInfo = new TbStageInfo(loader("tbstageinfo")); 
        tables.Add("TbStageInfo", TbStageInfo);
        TbEnemyInfo = new TbEnemyInfo(loader("tbenemyinfo")); 
        tables.Add("TbEnemyInfo", TbEnemyInfo);
        TbCommon = new TbCommon(loader("tbcommon")); 
        tables.Add("TbCommon", TbCommon);
        TbBuffInfo = new TbBuffInfo(loader("tbbuffinfo")); 
        tables.Add("TbBuffInfo", TbBuffInfo);
        TbCardBuffInfo = new TbCardBuffInfo(loader("tbcardbuffinfo")); 
        tables.Add("TbCardBuffInfo", TbCardBuffInfo);
        TbTileInfo = new TbTileInfo(loader("tbtileinfo")); 
        tables.Add("TbTileInfo", TbTileInfo);
        TbMapInfo = new TbMapInfo(loader("tbmapinfo")); 
        tables.Add("TbMapInfo", TbMapInfo);
        PostInit();

        TbPlayerInfo.Resolve(tables); 
        TbCardInfo.Resolve(tables); 
        TbStageInfo.Resolve(tables); 
        TbEnemyInfo.Resolve(tables); 
        TbCommon.Resolve(tables); 
        TbBuffInfo.Resolve(tables); 
        TbCardBuffInfo.Resolve(tables); 
        TbTileInfo.Resolve(tables); 
        TbMapInfo.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbPlayerInfo.TranslateText(translator); 
        TbCardInfo.TranslateText(translator); 
        TbStageInfo.TranslateText(translator); 
        TbEnemyInfo.TranslateText(translator); 
        TbCommon.TranslateText(translator); 
        TbBuffInfo.TranslateText(translator); 
        TbCardBuffInfo.TranslateText(translator); 
        TbTileInfo.TranslateText(translator); 
        TbMapInfo.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}